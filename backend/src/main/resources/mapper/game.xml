<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dance.game">

	<select id="getVideoList"
		resultType="com.dance.dto.Video">
		select video_id, thumbnail, title, file, length, difficulty
		from video
	</select>
	
	<select id="getVideoMyPoint"
		parameterType="com.dance.dto.Play"
		resultType="java.lang.Integer">
		select point
		from play
		where member_id=#{member_id} and video_id=#{video_id}
		order by point desc
		limit 1
	</select>
	
	<select id="getVideo"
		parameterType="java.lang.Integer"
		resultType="com.dance.dto.Video">
		select file, length
		from video
		where video_id=#{video_id}
	</select>
	
	<select id="getMyAvatarName"
		parameterType="java.lang.Integer"
		resultType="java.lang.String">
		select name
		from avatar
		where avatar_id=#{avatar_now}
	</select>
	
	<select id="getIcon"
		parameterType="java.lang.Integer"
		resultType="com.dance.dto.Icon">
		select icon_id, img, sec
		from icon
		where video_id=#{video_id}
	</select>
	
	<select id="getRankingByVideo"
		parameterType="java.lang.Integer"
		resultType="com.dance.dto.Ranking">
		select @rownum:=@rownum+1 ranking, member_id, nickname, avatar_now, img, point
		from (select @rownum := 0) R, 
			(select m.member_id, m.nickname, m.avatar_now, m.img, ifnull(s.point,0) point
			from (select member_id, nickname, avatar_now, img 
				from members m, avatar a 
				where m.avatar_now=a.avatar_id) m
			left join
				(select member_id, max(point) point from play 
				where video_id=#{video_id} and date_format(datetime,'%Y-%m')=date_format(now(),'%Y-%m') 
				group by member_id) s
			on m.member_id=s.member_id
			order by point desc, member_id) s
	</select>
	
	<select id="getRankingByScore"
		resultType="com.dance.dto.Ranking">
		select @rownum:=@rownum+1 ranking, member_id, nickname, avatar_now, img, point
		from (select @rownum := 0) R, 
			(select m.member_id, m.nickname, m.avatar_now, m.img, ifnull(s.point,0) point
			from (select member_id, nickname, avatar_now, img from members m, avatar a 	
				where m.avatar_now=a.avatar_id) m
			left join
				(select member_id, sum(point) point from
					(select member_id, video_id, max(point) point from play 
                	where date_format(datetime,'%Y-%m')=date_format(now(),'%Y-%m') group by member_id, video_id) p
				group by member_id) s
			on m.member_id=s.member_id
			order by point desc, member_id) o
	</select>
	
	<insert id="setPlayResult"
		parameterType="com.dance.dto.Play">
		insert into play (`member_id`, `video_id`, `perfect`, `great`, `good`, `bad`, `point`, `datetime`) 
		VALUES (#{member_id}, #{video_id}, #{perfect}, #{great}, #{good}, #{bad}, #{point}, now())
	</insert>
	
	<select id="getPlayResult"
		parameterType="java.lang.Integer"
		resultType="com.dance.dto.Play">
		select play_id, video_id, point, datetime
		from play
		where member_id=#{member_id}
		order by datetime desc
		limit 1
	</select>
	
	<select id="getMyRanking"
		parameterType="com.dance.dto.Play"
		resultType="java.lang.Integer">
		select ranking 
		from (select @rownum:=@rownum+1 ranking, member_id
			from (select @rownum := 0) R, 
				(select m.member_id, ifnull(s.point,0) point
				from (select member_id
					from members m) m
				left join
					(select member_id, max(point) point from play 
					where video_id=#{video_id} and date_format(datetime,'%Y-%m')=date_format(now(),'%Y-%m') 
					group by member_id) s
				on m.member_id=s.member_id
				order by point desc, member_id) s) r
		where member_id=#{member_id}
	</select>
	
	<select id="getPerfectPoint"
		parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(*)
		from icon
		where video_id=#{video_id}
	</select>
	
	<select id="getMyAvatar"
		parameterType="java.lang.Integer"
		resultType="java.lang.String">
		select url
		from avatar
		where avatar_id=#{avatar_id}
	</select>
	
</mapper>
